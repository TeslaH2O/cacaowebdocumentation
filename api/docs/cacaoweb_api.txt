


  HOW TO CALL THE API FUNCTIONS

    * The API is called through http calls on the cacaoweb http server.
	
	For example, to get the current version of the running cacaoweb instance:
	  $ curl http://localhost:4001/version
	"curl" can be replaced by "wget" or any http-aware client.
	It can also be called within a browser by pasting the url in the address bar.
	
	* All the API functions can be called through a url like the following:
	  http://localhost:4001/[name_of_the_api_function]
	  http://127.0.0.1:4001/[name_of_the_api_function]
	  
	  cacaoweb is the default port where it is listening to. It can be changed, see below in "Startup Parameters For Cacaoweb Instance".
	  
	  

  UPLOADING
  
    Any file can be uploaded to the cacaoweb P2P network.
	Once a file is uploaded, it cannot be deleted.
	There are essentially two ways to upload content on cacaoweb network:
  
    1. Direct Upload
	  
	  "Direct upload" means that the file is directly uploaded from your computer to the cacaoweb network without any intermediary.
	  It is uploaded in p2p fashion to the cacaoweb network and thus the progress is not linear like with a standard upload to a ftp or http server.
	  It also takes a longer time to upload a file in p2p (twice or 3 times as long). However downloads are usually a lot faster in p2p.
	  
	
	  * Basic Usage
	  
	  
		- upload a local file:
		  
		/upload?filepath=[PATH_TO_THE_FILE]
		  
		where [PATH_TO_THE_FILE] is the full path to the local file you want to upload
	  
	  
		- get the current list of uploads and their progress:
		
		/uploads
		
		this gives you a list of current uploads in XML format
		
		
		- remove an upload:
		
		/removeupload?f=[MD5_OF_THE_FILE]
		
		where [MD5_OF_THE_FILE] is the md5 of the file, given by the /uploads function
		
		It just stops the cacaoweb client from uploading this file and removes it from the list of current uploads.
		If the file is already on the cacaoweb network (if the progress has reach 100%), the file will reachable on cacaoweb network.
		
		
		
	  
	  * Paid files
	  
	  
	    - upload a local file for pay-per-download:
		
		/upload?filepath=[PATH_TO_THE_FILE]&restricted=[RESTRICTED]&previewallowed=[PREVIEWALLOWED]
		
		this allows to upload a file for pay-per-view:
		  - you can specify "true" for the parameter "restricted" to make it a paid file
		  - you can specifiy "true" for the parameter "previewallowed" if you still want people to watch the first few minutes of the file for free (after that, they need to buy the file in order to continue with viewing the file)
		  
		For example, to make a file pay-per-download and don't allow people to watch the first few minutes for free:
		
		$ curl http://localhost:4001/upload?filepath=/mydocuments/mymovie.mp4&restricted=true&previewallowed=false
		
		Files uploaded as free files cannot be converted to paid files later on.
		
		
		Once the file is uploaded, you need to set up the price (in the cacaoweb credits unit) people will have to pay to get it.
		By default the price is 0, which means the file can be downloaded for free.
		You can set up any price you want.
		
		To upload the price of your file, you need to upload it to the cacaoweb central metadata repository. The price is part of the metadata of the file, which also include the title of the file and other optional fields such as the year of release, season, episode, language, subtitles, etc.
		
		[TO DO: DOCUMENT HOW TO UPLOAD METADATA TO CACAOWEB CENTRAL METADATA REPOSITORY]
		
		  
	
	2. Remote Upload
      
	  * What is it?
	    Allows to upload videos hosted on other platforms to the cacaoweb platforms.
        Currently supported platforms for remote upload are megavideo, videobb and videozer.
		
	  * API functions
	  
	  /remoteupload?provider=[PROVIDER]&videoid=[VIDEOID]
	  
	  parameter [VIDEOID] :		This remote-uploads the video with video id [VIDEOID]
	  parameter [PROVIDER] :	This is an integer to specify the host for this file.
								0 = megavideo
								1 = videobb
								2 = videozer
								
	  example:
	  $ curl http://127.0.0.1:4001/remoteupload?provider=1&videoid=Gy85jo9Pg7st
	  

  OTHER FUNCTIONS:
  
  
  /downloads	: get the list of current downloads in XML format
  
  /digest 		: get the md5 of the cacaoweb executable
  /version		: get the version of the cacaoweb instance
  
  /exit			: shut down the cacaoweb instance
  
  
  
  STARTUP PARAMETERS FOR CACAOWEB INSTANCE:
  
  These command lines options can be used to customize cacaoweb behavior.
  
  usage: $ ./cacaoweb [options list]
  
  
  -port [PORT]		: specifies which port to bind cacaoweb http server to
  -ip [IP]			: specifies which ip address to bind cacaoweb http server to
  -appdirectory [PATH_TO_LOCAL_DIRECTORY] 
					: specifies the directory used by cacaoweb to store its file (downloads, etc.)
  -noplayer			: launches cacaoweb without launching the browser
  